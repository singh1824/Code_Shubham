Title: Min cut tree

Problem Statement:
Given an integer K and an array height[] of size N, where height[i] denotes the height of the ith tree in a forest. The task is to make a cut of height X from the ground such that at max K unit wood is collected. Find the minimum value of X

If you make a cut of height X from the ground then every tree with a height greater than X will be reduced to X and the remaining part of wood can be collected.

Solution:

#include "bits/stdc++.h"
using namespace std;
 
#define ll long long int
#define ld long double
#define pi pair<int, int>
#define pb push_back
#define fi first
#define se second
#define IOS ios::sync_with_stdio(false); cin.tie(0); cout.tie(0)
#ifndef LOCAL
#define endl '\n'
#endif

const int N = 1e5 + 5;
const int mod = 1e9 + 7;
const int inf = 1e9 + 9;

int a[N], n, k;

int f(int x){
	int sum = 0;
	for(int i = 1; i <= n; i++)
		sum += max(a[i]-x, 0);
	return sum;
}

void solve(){
	cin >> n >> k;
	for(int i = 1; i <= n; i++)
		cin >> a[i];
	int l = 0, h = N;
	while(l+1 < h){
		int m = (l + h) >> 1;
		if(f(m) <= k)
			h = m;
		else
			l = m;
	}
	cout << h;
}

void testcases(){
	int tt = 1; 
	//cin >> tt;
	while(tt--){
		solve();
	}
}

signed main() {
	IOS;
		clock_t start = clock();

	testcases();

	cerr << (double)(clock() - start)*1000/CLOCKS_PER_SEC << " ms" << endl;
	return 0;
}